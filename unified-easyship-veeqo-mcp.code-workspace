{
  "folders": [
    {
      "name": "🚀 Unified EasyPost-Veeqo MCP",
      "path": ".",
    },
  ],
  "settings": {
    // TypeScript Configuration
    "typescript.preferences.importModuleSpecifier": "relative",
    "typescript.suggest.autoImports": true,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "typescript.enablePromptUseWorkspaceTsdk": true,
    "typescript.inlayHints.parameterNames.enabled": "all",
    "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
    "typescript.inlayHints.parameterTypes.enabled": true,
    "typescript.inlayHints.variableTypes.enabled": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    "typescript.referencesCodeLens.enabled": true,
    "typescript.implementationsCodeLens.enabled": true,
    "typescript.preferences.includePackageJsonAutoImports": "on",
    "typescript.preferences.quoteStyle": "single",
    "typescript.tsserver.log": "off",

    // JavaScript Configuration
    "javascript.updateImportsOnFileMove.enabled": "always",
    "javascript.suggest.autoImports": true,
    "javascript.preferences.quoteStyle": "single",
    "javascript.preferences.importModuleSpecifier": "relative",
    "javascript.validate.enable": true,
    "javascript.inlayHints.parameterNames.enabled": "all",
    "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
    "javascript.inlayHints.parameterTypes.enabled": true,
    "javascript.inlayHints.variableTypes.enabled": true,
    "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
    "javascript.referencesCodeLens.enabled": true,

    // Editor Configuration
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.formatOnType": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit",
      "source.organizeImports": "explicit",
      "source.sortImports": "explicit",
    },
    "editor.fontSize": 14,
    "editor.fontFamily": "'JetBrains Mono', 'Fira Code', 'Cascadia Code', Consolas, monospace",
    "editor.fontLigatures": true,
    "editor.lineHeight": 22,
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.renderWhitespace": "boundary",
    "editor.rulers": [80, 100],
    "editor.wordWrap": "on",
    "editor.minimap.enabled": true,
    "editor.minimap.showSlider": "always",
    "editor.minimap.renderCharacters": false,
    "editor.minimap.maxColumn": 100,
    "editor.cursorBlinking": "smooth",
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.smoothScrolling": true,
    "editor.mouseWheelZoom": true,
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.quickSuggestions": {
      "strings": true,
      "comments": false,
      "other": true,
    },
    "editor.suggestSelection": "first",
    "editor.snippetSuggestions": "top",
    "editor.suggest.insertMode": "replace",
    "editor.suggest.localityBonus": true,
    "editor.suggest.shareSuggestSelections": true,
    "editor.suggest.showMethods": true,
    "editor.suggest.preview": true,
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": "active",
    "editor.guides.indentation": true,
    "editor.stickyScroll.enabled": true,
    "editor.inlineSuggest.enabled": true,
    "editor.linkedEditing": true,
    "editor.parameterHints.enabled": true,
    "editor.hover.sticky": true,

    // File Associations
    "files.associations": {
      "*.env*": "dotenv",
      "Dockerfile*": "dockerfile",
      ".cursorrules": "markdown",
      "*.md": "markdown",
      "*.json": "jsonc",
    },
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 1000,
    "files.trimTrailingWhitespace": true,
    "files.trimFinalNewlines": true,
    "files.insertFinalNewline": true,
    "files.eol": "\n",

    // Search Configuration
    "search.exclude": {
      "**/node_modules": true,
      "**/dist": true,
      "**/build": true,
      "**/.git": true,
      "**/coverage": true,
      "**/.next": true,
      "**/.cache": true,
      "**/tmp": true,
      "**/*.log": true,
      "**/pnpm-lock.yaml": true,
    },
    "search.useIgnoreFiles": true,
    "search.smartCase": true,
    "search.showLineNumbers": true,
    "search.maxResults": 20000,

    // Files Configuration
    "files.exclude": {
      "**/.git": true,
      "**/.DS_Store": true,
      "**/node_modules": false,
      "**/dist": false,
      "**/*.log": true,
    },
    "files.watcherExclude": {
      "**/node_modules/**": true,
      "**/dist/**": true,
      "**/.git/**": true,
      "**/coverage/**": true,
    },

    // ESLint Configuration
    "eslint.enable": true,
    "eslint.autoFixOnSave": true,
    "eslint.validate": [
      "javascript",
      "javascriptreact",
      "typescript",
      "typescriptreact",
    ],
    "eslint.workingDirectories": ["."],
    "eslint.codeActionsOnSave.mode": "problems",
    "eslint.format.enable": true,
    "eslint.lintTask.enable": true,

    // Prettier Configuration
    "prettier.enable": true,
    "prettier.requireConfig": true,
    "prettier.singleQuote": true,
    "prettier.trailingComma": "es5",
    "prettier.tabWidth": 2,
    "prettier.semi": true,
    "prettier.printWidth": 100,
    "prettier.bracketSpacing": true,
    "prettier.arrowParens": "avoid",
    "prettier.endOfLine": "lf",

    // Terminal Configuration
    "terminal.integrated.fontSize": 13,
    "terminal.integrated.fontFamily": "'JetBrains Mono', 'Fira Code', monospace",
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.enablePersistentSessions": true,
    "terminal.integrated.defaultProfile.linux": "bash",
    "terminal.integrated.defaultProfile.osx": "zsh",
    "terminal.integrated.defaultProfile.windows": "powershell",
    "terminal.integrated.scrollback": 10000,
    "terminal.integrated.tabs.enabled": true,
    "terminal.integrated.tabs.location": "left",
    "terminal.integrated.environmentChangesIndicator": "on",

    // Workbench Configuration
    "workbench.colorTheme": "One Dark Pro Darker",
    "workbench.iconTheme": "material-icon-theme",
    "workbench.productIconTheme": "fluent-icons",
    "workbench.editor.enablePreview": true,
    "workbench.editor.enablePreviewFromQuickOpen": true,
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.tabCloseButton": "right",
    "workbench.editor.wrapTabs": true,
    "workbench.startupEditor": "none",
    "workbench.tree.indent": 20,
    "workbench.tree.renderIndentGuides": "always",
    "workbench.activityBar.visible": true,
    "workbench.statusBar.visible": true,
    "workbench.sideBar.location": "left",
    "workbench.editor.showTabs": true,
    "workbench.editor.labelFormat": "short",
    "workbench.editor.splitInGroupLayout": "horizontal",

    // Git Configuration
    "git.enableSmartCommit": true,
    "git.autofetch": true,
    "git.confirmSync": false,
    "git.enableCommitSigning": false,
    "git.decorations.enabled": true,
    "git.showPushSuccessNotification": true,

    // Testing Configuration
    "vitest.enable": true,
    "testing.automaticallyOpenPeekView": "failureInVisibleDocument",
    "testing.defaultGutterClickAction": "run",
    "testing.followRunningTest": true,
    "testing.gutterEnabled": true,

    // Cursor AI Configuration (Optimized for MCP Development)
    "cursor.aiProvider": "claude-3.5-sonnet",
    "cursor.enableSuggestions": true,
    "cursor.enableInlineCompletion": true,
    "cursor.suggestionDelay": 200,
    "cursor.maxTokens": 8192,
    "cursor.temperature": 0.3,
    "cursor.enableContextAwareness": true,
    "cursor.enableSemanticSearch": true,
    "cursor.enableCodeActions": true,
    "cursor.enableRefactoring": true,
    "cursor.enableDocumentation": true,
    "cursor.enableTestGeneration": true,
    "cursor.enableDebugAssistance": true,
    "cursor.contextWindow": 16384,
    "cursor.streamResponses": true,
    "cursor.enableMCPIntegration": true,
    "cursor.mcpAutoRefresh": true,
    "cursor.enableTypeScriptAssist": true,
    "cursor.enableProjectContext": true,
    "cursor.enableDependencyAnalysis": true,
    "cursor.enableAPIDocumentation": true,

    // Performance Settings
    "files.maxMemoryForLargeFilesMB": 4096,
    "editor.maxTokenizationLineLength": 20000,
    "editor.largeFileOptimizations": true,
    "search.followSymlinks": false,

    // Security
    "security.workspace.trust.untrustedFiles": "prompt",
    "security.workspace.trust.enabled": true,

    // Telemetry
    "telemetry.telemetryLevel": "off",
    "redhat.telemetry.enabled": false,

    // Miscellaneous
    "window.zoomLevel": 0,
    "window.commandCenter": true,
    "breadcrumbs.enabled": true,
    "outline.showVariables": true,
    "outline.showFunctions": true,
    "outline.showConstants": true,
    "outline.showEnumMembers": true,
    "outline.showClasses": true,
    "problems.decorations.enabled": true,
    "problems.showCurrentInStatus": true,
  },
  "extensions": {
    "recommendations": [
      // Core Development
      "ms-vscode.vscode-typescript-next",
      "dbaeumer.vscode-eslint",
      "esbenp.prettier-vscode",
      "bradlc.vscode-tailwindcss",

      // Testing
      "vitest.explorer",
      "ms-vscode.test-adapter-converter",

      // File Types
      "ms-vscode.vscode-json",
      "redhat.vscode-yaml",
      "ms-vscode.vscode-docker",

      // Git & Version Control
      "eamodio.gitlens",
      "github.vscode-pull-request-github",

      // Productivity
      "usernamehw.errorlens",
      "christian-kohler.path-intellisense",
      "formulahendry.auto-rename-tag",
      "aaron-bond.better-comments",
      "gruntfuggly.todo-tree",
      "streetsidesoftware.code-spell-checker",

      // AI & Code Assistance
      "github.copilot",
      "github.copilot-chat",

      // Markdown & Documentation
      "yzhang.markdown-all-in-one",
      "davidanson.vscode-markdownlint",

      // REST & API Testing
      "humao.rest-client",

      // Project Management
      "alefragnani.project-manager",

      // Performance & Monitoring
      "wix.vscode-import-cost",

      // Docker & DevOps
      "ms-azuretools.vscode-docker",
      "ms-vscode-remote.remote-containers",

      // MCP Specific
      "anthropic.cursor-mcp",
      "modelcontextprotocol.mcp-client",
    ],
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "🚀 Start Development Server",
        "type": "shell",
        "command": "pnpm",
        "args": ["run", "dev"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "clear": false,
        },
        "problemMatcher": ["$tsc-watch"],
        "runOptions": {
          "runOn": "folderOpen",
        },
      },
      {
        "label": "🏗️ Build Project",
        "type": "shell",
        "command": "pnpm",
        "args": ["run", "build"],
        "group": {
          "kind": "build",
          "isDefault": true,
        },
        "presentation": {
          "echo": true,
          "reveal": "silent",
          "focus": false,
          "panel": "shared",
        },
        "problemMatcher": ["$tsc"],
      },
      {
        "label": "🧪 Run Tests",
        "type": "shell",
        "command": "pnpm",
        "args": ["test"],
        "group": {
          "kind": "test",
          "isDefault": true,
        },
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
        },
      },
      {
        "label": "🧪 Run Tests (Watch)",
        "type": "shell",
        "command": "pnpm",
        "args": ["run", "test:watch"],
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
        },
      },
      {
        "label": "🔍 Lint Code",
        "type": "shell",
        "command": "pnpm",
        "args": ["run", "lint"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "silent",
          "focus": false,
          "panel": "shared",
        },
        "problemMatcher": ["$eslint-stylish"],
      },
      {
        "label": "🔧 Fix Lint Issues",
        "type": "shell",
        "command": "pnpm",
        "args": ["run", "lint:fix"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "silent",
          "focus": false,
          "panel": "shared",
        },
      },
      {
        "label": "🎨 Format Code",
        "type": "shell",
        "command": "pnpm",
        "args": ["run", "format"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "silent",
          "focus": false,
          "panel": "shared",
        },
      },
      {
        "label": "✅ Quality Check",
        "type": "shell",
        "command": "pnpm",
        "args": ["run", "quality:check"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
        },
      },
      {
        "label": "🔍 Type Check",
        "type": "shell",
        "command": "pnpm",
        "args": ["run", "type-check"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "silent",
          "focus": false,
          "panel": "shared",
        },
        "problemMatcher": ["$tsc"],
      },
      {
        "label": "📊 Validate Structure",
        "type": "shell",
        "command": "pnpm",
        "args": ["run", "validate:structure"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
        },
      },
      {
        "label": "🐳 Docker Build",
        "type": "shell",
        "command": "pnpm",
        "args": ["run", "docker:build"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
        },
      },
      {
        "label": "🚀 Deploy to Railway",
        "type": "shell",
        "command": "pnpm",
        "args": ["run", "deploy:railway"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
        },
      },
    ],
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "🐛 Debug MCP Server",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/src/server.ts",
        "runtimeArgs": ["--loader", "tsx/esm"],
        "env": {
          "NODE_ENV": "development",
        },
        "envFile": "${workspaceFolder}/.env",
        "console": "integratedTerminal",
        "sourceMaps": true,
        "restart": true,
        "protocol": "inspector",
        "outFiles": ["${workspaceFolder}/dist/**/*.js"],
        "skipFiles": ["<node_internals>/**"],
      },
      {
        "name": "🐛 Debug MCP Server (FastMCP)",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/src/server.ts",
        "runtimeArgs": ["--loader", "tsx/esm"],
        "env": {
          "NODE_ENV": "development",
          "EASYPOST_API_KEY": "mock",
          "VEEQO_API_KEY": "mock",
        },
        "envFile": "${workspaceFolder}/.env",
        "console": "integratedTerminal",
        "sourceMaps": true,
        "restart": true,
        "protocol": "inspector",
        "outFiles": ["${workspaceFolder}/dist/**/*.js"],
        "skipFiles": ["<node_internals>/**"],
      },
      {
        "name": "🧪 Debug Tests",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/node_modules/vitest/vitest.mjs",
        "args": ["run", "--reporter=verbose"],
        "env": {
          "NODE_ENV": "test",
        },
        "envFile": "${workspaceFolder}/.env.test",
        "console": "integratedTerminal",
        "sourceMaps": true,
        "skipFiles": ["<node_internals>/**"],
      },
      {
        "name": "🧪 Debug Current Test",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/node_modules/vitest/vitest.mjs",
        "args": ["run", "${relativeFile}", "--reporter=verbose"],
        "env": {
          "NODE_ENV": "test",
        },
        "envFile": "${workspaceFolder}/.env.test",
        "console": "integratedTerminal",
        "sourceMaps": true,
        "skipFiles": ["<node_internals>/**"],
      },
    ],
  },
}
