{
  "name": "easypost-veeqo-mcp",
  "version": "1.0.0",
  "description": "Unified MCP server for EasyPost and Veeqo shipping, inventory, and orchestration",
  "main": "dist/server.js",
  "type": "module",
  "scripts": {
    "dev": "tsx watch src/server.ts",
    "dev:fastmcp": "tsx watch src/server/fastmcp-server.ts",
    "start": "node dist/server.js",
    "start:fastmcp": "node dist/server/fastmcp-server.js",
    "build": "tsc",
    "build:optimize": "node scripts/build-optimize.js",
    "build:production": "NODE_ENV=production npm run build:optimize",
    "build:analyze": "npm run build && npm run analyze:bundle",
    "prebuild": "npm run lint:check && npm run type-check",
    "lint": "eslint . --ext .ts,.js",
    "lint:fix": "eslint . --ext .ts,.js --fix",
    "lint:check": "eslint . --ext .ts,.js --max-warnings 200",
    "lint:fastmcp": "eslint . --ext .ts,.js -c .eslintrc-fastmcp.json",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "quality:check": "npm run lint:check && npm run format:check && npm run type-check",
    "quality:fix": "npm run lint:fix && npm run format",
    "test": "vitest",
    "test:unit": "vitest run test/unit",
    "test:integration": "vitest run test/integration",
    "test:coverage": "vitest --coverage",
    "test:watch": "vitest --watch",
    "test:ci": "vitest run --coverage --reporter=junit --outputFile=test-results.xml",
    "test:e2e": "npm run build && bash scripts/validate.sh",
    "perf:analyze": "node -e \"import('./dist/utils/performance-monitor.js').then(m => console.log(JSON.stringify(m.performanceMonitor.getPerformanceSummary(), null, 2)))\"",
    "perf:recommendations": "node -e \"import('./dist/utils/performance-monitor.js').then(m => console.log(JSON.stringify(m.performanceMonitor.getOptimizationRecommendations(), null, 2)))\"",
    "perf:monitor": "NODE_ENV=development npm run start:fastmcp",
    "docs:generate": "node scripts/generate-docs.js",
    "docs:jsdoc": "jsdoc -c jsdoc.config.json",
    "docs:build": "npm run docs:generate && npm run docs:jsdoc",
    "docs:serve": "npx http-server docs -p 8080 -o",
    "docs:update": "npm run docs:build && git add docs/",
    "health:check": "node -e \"import('./dist/middleware/health-checks.js').then(m => m.healthCheckManager.runHealthChecks().then(h => console.log(JSON.stringify(h, null, 2))))\"",
    "deploy:prepare": "npm run quality:check && npm run test:ci && npm run build:production",
    "deploy:validate": "npm run health:check && npm run test:e2e",
    "deploy:package": "CREATE_ARCHIVE=true npm run build:production",
    "analyze:bundle": "node -e \"console.log('Bundle analysis available in dist/bundle-analysis.json after build')\"",
    "analyze:deps": "npx depcheck",
    "analyze:security": "npm audit --audit-level moderate",
    "analyze:all": "npm run analyze:deps && npm run analyze:security && npm run perf:analyze",
    "clean": "rm -rf dist coverage docs/api test-results.xml .nyc_output",
    "clean:deps": "rm -rf node_modules package-lock.json && npm install",
    "reset": "npm run clean && npm run clean:deps",
    "update:deps": "npx npm-check-updates -u && npm install",
    "validate": "bash scripts/validate.sh",
    "docker:build": "docker build -t easypost-veeqo-mcp .",
    "docker:build:dev": "docker build -f Dockerfile.dev -t easypost-veeqo-mcp:dev .",
    "docker:run": "docker run -e EASYPOST_API_KEY=${EASYPOST_API_KEY} -e VEEQO_API_KEY=${VEEQO_API_KEY} -p 3000:3000 easypost-veeqo-mcp",
    "docker:run:dev": "docker run -e EASYPOST_API_KEY=${EASYPOST_API_KEY} -e VEEQO_API_KEY=${VEEQO_API_KEY} -p 3001:3000 -v $(pwd):/app -v /app/node_modules easypost-veeqo-mcp:dev",
    "docker:compose:up": "docker-compose up -d",
    "docker:compose:down": "docker-compose down",
    "docker:compose:dev": "docker-compose --profile dev up -d",
    "docker:compose:fastmcp": "docker-compose --profile fastmcp up -d",
    "docker:compose:logs": "docker-compose logs -f",
    "docker:compose:build": "docker-compose build",
    "docker:clean": "docker system prune -f && docker volume prune -f",
    "setup:premium": "bash scripts/setup-integrated-services.sh",
    "deploy:railway": "railway up",
    "logs:railway": "railway logs --follow",
    "status:railway": "railway status",
    "ai:analyze": "vibe-tools repo 'analyze shipping patterns and optimization opportunities'",
    "ai:help": "vibe-tools web 'latest TypeScript and MCP server best practices'",
    "test:claude": "node test-claude-integration.js"
  },
  "dependencies": {
    "@easypost/api": "^8.2.0",
    "@types/jsonwebtoken": "^9.0.10",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "fastmcp": "^2.0.0",
    "jsonwebtoken": "^9.0.2",
    "pino": "^9.0.0",
    "pino-pretty": "^11.0.0",
    "undici": "^6.19.2",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@anthropic-ai/claude-code": "^1.0.107",
    "@huggingface/inference": "^4.7.1",
    "@instantlyeasy/claude-code-sdk-ts": "^0.3.0",
    "@railway/cli": "^4.6.3",
    "@types/express": "^4.17.21",
    "@types/node": "^20.14.9",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "@vitest/coverage-v8": "^3.2.4",
    "depcheck": "^1.4.7",
    "eslint": "^8.57.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsdoc": "^48.2.0",
    "eslint-plugin-security": "^3.0.1",
    "http-server": "^14.1.1",
    "jsdoc": "^4.0.2",
    "npm-check-updates": "^16.14.12",
    "prettier": "^3.3.2",
    "tsx": "^4.15.7",
    "typescript": "^5.5.2",
    "vitest": "^3.2.4"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "volta": {
    "node": "20.11.0",
    "npm": "10.2.4"
  }
}
